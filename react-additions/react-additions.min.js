const{Component,createElement:r,forwardRef:f,useEffect,useState}=require('react');const{localize,isAuto,getCurrentLanguage,_INTERNALS:{addListener,removeListener}}=require('langutil');const getLangState=()=>({auto:isAuto(),lang:getCurrentLanguage()});function useLang(){if(typeof useState!=='function'){throw ReferenceError()}const[a,b]=useState({langRef:null});const{langRef:c}=a;const d=c===null;useEffect(()=>{let e=addListener(()=>{b({langRef:c})});b({langRef:e});return ()=>{removeListener(e)}},[d]);return getLangState()}function withLang(A,o={}){const{displayName:b,forwardRef:c}=o;const d=b||getDisplayName(A);class E extends Component{componentDidMount(){this.f=addListener(this.forceUpdate.bind(this))};componentWillUnmount(){removeListener(this.f)};render(){const{langState:g,innerRef:h,...i}=this.props;if(g){throw SyntaxError()}return r(A,{langState:getLangState(),ref:h,...i})}}let j;try{j=require('hoist-non-react-statics')}catch(e){}if(typeof j==='function'){j(E,A)}E.displayName=`withLang(${d})`;if(c){return f((props, ref)=>r(E,{...props,innerRef:ref}))}else{return E}}function getDisplayName(a){try{return a.displayName||a.name||'Unknown'}catch(e){return 'Unknown'}}function Localizable({keyword:a,children:b,paramArray:c=[],casing:d,transform:e,renderAs:f='span',allowEmpty:g,...h}){let child=!b&&a?a:b;if(child&&typeof child==='string'){child=localize({keyword:child,param:c,casing:d,transform:e})}else if(g){child=''}else{child=`_${a}_`}if(f==='value'){return child}else{return r(f,h,child)}}module.exports={withLang,useLang,Localizable}