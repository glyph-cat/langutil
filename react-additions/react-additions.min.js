// Pending minification
// const{Component,createElement:r,forwardRef,useEffect,useState}=require('react');const{localize,isAuto,getCurrentLanguage,_INTERNALS:{addListener,removeListener}}=require('langutil');const getLangState=()=>({auto:isAuto(),lang:getCurrentLanguage()});function useLang(){if(typeof useState!=='function'){throw ReferenceError()}const[a,b]=useState({langRef:null});const{langRef:c}=a;const d=c===null;useEffect(()=>{let e=addListener(()=>{b({langRef:c})});b({langRef:e});return()=>{removeListener(e)}},[d]);return getLangState()}function withLang(A){const b=getDisplayName(A);class C extends Component{componentDidMount(){this.d=addListener(this.forceUpdate.bind(this))};componentWillUnmount(){removeListener(this.d)};render(){const {langState:e,innerRef:f,...g}=this.props;if(e){throw SyntaxError()}return r(A,{langState:e?e:getLangState(),ref:f,...g})}}let hoist;try{hoist=require('hoist-non-react-statics')}catch(e){}if(typeof hoist==='function'){hoist(C,A)}C.displayName=`withLang(${b})`;return forwardRef((props,ref)=>r(C,{...props,innerRef:ref}))}function getDisplayName(a){try{return a.displayName||a.name||'Unknown'}catch(e){return 'Unknown'}}function Localizable({keyword:a,children:b,paramArray:c=[],casing:d,transform:e,renderAs:f='span',allowEmpty:g,...h}){let i=!b&&a?a:b;if(i&&typeof i==='string'){i=localize({keyword:i,param:c,casing:d,transform:e})}else if(g){i=''}else{i=`_${a}_`}if(f==='value'){return i}else{return r(f,h,i)}}module.exports={withLang,useLang,Localizable}