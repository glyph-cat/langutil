{"version":3,"sources":["code-samples/api-init/index.js","../node_modules/copy-to-clipboard/index.js","../node_modules/toggle-selection/index.js","code-samples/api-init-react/index.js","code-samples/api-localize/index.js","code-samples/api-logs-focus/index.js","code-samples/api-set-language/index.js","code-samples/api-set-dictionary/index.js","code-samples/api-auto-detect/index.js","code-samples/api-with-lang/index.js","code-samples/casings/index.js","code-samples/dictionary-primary-example/index.js","code-samples/dictionary-secondary-example/index.js","code-samples/dictionary-index-example/index.js","code-samples/folder-structure/index.js","code-samples/home-demo/index.js","code-samples/install-using-npm/index.js","code-samples/install-using-yarn/index.js","code-samples/paramarray/index.js","code-samples/paramarray-dictionary/index.js","code-samples/paramobject/index.js","code-samples/paramobject-dictionary/index.js","code-samples/switching-languages/index.js","code-samples/transformations/index.js","code-samples/usage/index.js","components/code-display/copy-button.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/code-display/code-display.js","classes/HashFactory.js","components/code-display/index.js","code-samples/index.js"],"names":["ApiInit","title","localize","deselectCurrent","defaultMessage","module","exports","text","options","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","clearData","setData","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","console","error","warn","window","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","type","forEach","focus","indent","ApiSetLanguage","ApiLogsFocus","ApiAutoDetect","keyword","transform","withProps","dect","add","rn","ApiWithLang","Casings","name1","casing","DictionaryPrimaryExample","DictionarySecondaryExample","DictionaryIndexExample","primaryLang","secondaryLang","FolderStructure","mode","HomeDemo","InstallUsingNpm","InstallUsingYarn","ParamArray","name2","ParamArrayDictionary","ParamObject","ParamObjectDictionary","SwitchingLanguages","Transformations","val","Usage","CopyButton","onClick","copied","className","backgroundColor","border","color","children","_toConsumableArray","arr","Array","isArray","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","idTracker","blacklist","this","used","charset","STRINGS","defaultHashCharset","newHash","charsetToUse","Set","split","join","getSanitizedCharset","count","getRandomString","includes","hash","indexOfHashInUsed","indexOf","splice","CodeDisplay","modStyles","extractCode","props","childrenToUse","output","id","componentId","extracted","getElementById","innerText","handleCopy","codeToCopy","copy","showCopied","alert","setState","timeoutRef","setTimeout","createHash","state","unregisterHash","clearTimeout","startLineFrom","modArray","lineArray","codeArray","padArray","_children","modType","mod","key","paddingInlineStart","paddingInlineEnd","React","Component","COLORS","Com","Key","Var","Def","Str","Rgx","Rgxe","Type","Func","Mark","borderRadius","paddingBlockStart","paddingBlockEnd","Line","repeat","LineAdd","CodeSamples","require","ApiInitReact","ApiLocalize","ApiSetDictionary","index","keys","default"],"mappings":"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","file":"static/js/0.5201673c.chunk.js","sourcesContent":["import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Key, Var, Str, Func, Mark } from '../../components/code-display'\n\nconst ApiInit = () => (\n  <CodeDisplay\n    title={localize('HOW_TO_USE_API', ['init()'])}\n  >\n    <Line>\n      <Key>import</Key> <Var>langutil</Var>, {'{'} <Var>localize</Var>, <Mark><Var>AUTO_DETECT</Var></Mark> {'}'} <Key>from</Key> <Str>'langutil'</Str>\n    </Line>\n    <Line>\n      <Key>import</Key> <Var>dictionary</Var> <Key>from</Key> <Str>'./localizations'</Str>\n    </Line>\n    <Line />\n    <Line>\n      <Var>langutil</Var>.<Func>init</Func>(<Var>dictionary</Var>, <Str>'{localize('DOC_EXAMPLE_PRIMARY_LANG')}'</Str>, <Mark><Var>AUTO_DETECT</Var></Mark>)\n    </Line>\n  </CodeDisplay>\n)\n\nexport default ApiInit\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n      message,\n      reselectPrevious,\n      range,\n      selection,\n      mark,\n      success = false;\n\n  if (!options) {\n    options = {};\n  }\n\n  debug = options.debug || false;\n\n  try {\n    reselectPrevious = deselectCurrent();\n    range = document.createRange();\n    selection = document.getSelection();\n    mark = document.createElement(\"span\");\n    mark.textContent = text; // reset user styles for span element\n\n    mark.style.all = \"unset\"; // prevents scrolling to the end of the page\n\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\"; // used to preserve spaces and line breaks\n\n    mark.style.whiteSpace = \"pre\"; // do not inherit user-select (it may be `none`)\n\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function (e) {\n      e.stopPropagation();\n\n      if (options.format) {\n        e.preventDefault();\n        e.clipboardData.clearData();\n        e.clipboardData.setData(options.format, text);\n      }\n    });\n    document.body.appendChild(mark);\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n    var successful = document.execCommand(\"copy\");\n\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;","module.exports = function () {\n  var selection = document.getSelection();\n\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n\n  var active = document.activeElement;\n  var ranges = [];\n\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) {\n    // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' && selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function (range) {\n        selection.addRange(range);\n      });\n    }\n\n    active && active.focus();\n  };\n};","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, {\n  Com, Def, Func, Line, LineAdd, Key, Str, Type, Var\n} from '../../components/code-display'\n\nconst ApiInit = () => (\n  <CodeDisplay title={localize('HOW_TO_USE_API_REACT', ['init()'])}>\n    <Line>\n      <Key>import</Key> <Var>React</Var> <Key>from</Key> <Str>'React'</Str>\n    </Line>\n    <LineAdd>\n      <Key>import</Key> <Var>langutil</Var>, {'{'} <Var>localize</Var>, <Var>AUTO_DETECT</Var> {'}'} <Key>from</Key> <Str>'langutil'</Str>\n    </LineAdd>\n    <LineAdd>\n      <Key>import</Key> <Var>dictionary</Var> <Key>from</Key> <Str>'./localizations'</Str>\n    </LineAdd>\n    <LineAdd />\n    <LineAdd>\n      <Var>langutil</Var>.<Func>init</Func>(<Var>dictionary</Var>, <Str>'{localize('DOC_EXAMPLE_PRIMARY_LANG')}'</Str>, <Var>AUTO_DETECT</Var>)\n    </LineAdd>\n    <Line />\n    <Line>\n      <Def>function</Def> <Type>App</Type> () {'{'}\n    </Line>\n    <Line indent={1}>\n      <Com>{'// ...'}</Com>\n    </Line>\n  </CodeDisplay>\n)\n\nexport default ApiInit\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Com, Def, Func, Line, Rgx, Rgxe, Str, Var } from '../../components/code-display'\n\nconst ApiSetLanguage = () => {\n  return (\n    <CodeDisplay title={localize('HOW_TO_USE_API', ['localize()'])}>\n      <Line>\n        <Com>{`// ${localize('NORMAL_SYNTAX')}`}</Com>\n      </Line>\n      <Line>\n        <Func>localize</Func>(<Str>'KEYWORD'</Str>, [<Str>'{localize('SOME_PARAMETER')}'</Str>], <Str>'upperCase'</Str>, (<Var>str</Var>) <Def>=></Def> <Var>str</Var>.<Func>replace</Func>(<Rgx>/<Rgxe>[</Rgxe>aeiou<Rgxe>]</Rgxe>/</Rgx><Def>gi</Def>, <Str>'*'</Str>)\n      </Line>\n      <Line>\n        <Func>localize</Func>(<Str>'KEYWORD'</Str>, {'{ '}<Var>key</Var>: <Str>'{localize('SOME_PARAMETER')}'</Str>{' }'}, <Str>'upperCase'</Str>, (<Var>str</Var>) <Def>=></Def> <Var>str</Var>.<Func>replace</Func>(<Rgx>/<Rgxe>[</Rgxe>aeiou<Rgxe>]</Rgxe>/</Rgx><Def>gi</Def>, <Str>'*'</Str>)\n      </Line>\n      <Line />\n      <Line>\n        <Com>{`// ${localize('ALTERNATIVE_SYNTAX')}`}</Com>\n      </Line>\n      <Line>\n        <Func>localize</Func>({'{'}\n      </Line>\n      <Line indent={1}>\n        <Var>keyword</Var>: <Str>'KEYWORD'</Str>\n      </Line>\n      <Line indent={1}>\n        <Var>param</Var>: [<Str>'{localize('SOME_PARAMETER')}'</Str>]\n      </Line>\n      <Line indent={1}>\n        <Com>{`// ${localize('OR', null, 'lowerCase')}`}</Com>\n      </Line>\n      <Line indent={1}>\n        <Var>param</Var>: {'{ '}<Var>key</Var>: <Str>'{localize('SOME_PARAMETER')}'</Str>{' }'}\n      </Line>\n      <Line indent={1}>\n        <Var>casing</Var>: <Str>'upperCase'</Str>\n      </Line>\n      <Line indent={1}>\n        <Var>transform</Var>: (<Var>str</Var>) <Def>=></Def> <Var>str</Var>.<Func>replace</Func>(<Rgx>/<Rgxe>[</Rgxe>aeiou<Rgxe>]</Rgxe>/</Rgx><Def>gi</Def>, <Str>'*'</Str>)\n      </Line>\n      <Line>\n        {'})'}\n      </Line>\n    </CodeDisplay>\n  )\n}\n\nexport default ApiSetLanguage\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Key, Var, Str, Func, Def, Com, Type } from '../../components/code-display'\n\nconst ApiLogsFocus = () => (\n  <CodeDisplay title={localize('HOW_TO_USE_API', ['logs.focus()'])}>\n    <Line>\n      <Key>import</Key> {'{ '}<Var>logs</Var>{' }'} <Key>from</Key> <Str>'langutil'</Str>\n    </Line>\n    <Line />\n    <Line>\n      <Def>let</Def> <Var>loggedCode</Var> = <Var>logs</Var>.<Func>focus</Func>(() <Def>=></Def> {'{'}\n    </Line>\n    <Line indent={1}>\n      <Com>{`// ${localize('YOUR_CODE_HERE')}`}</Com>\n    </Line>\n    <Line>\n      {'})'}\n    </Line>\n    <Line />\n    <Line>\n      <Type>console</Type>.<Func>log</Func>(<Var>loggedCode</Var>)\n      <Com>{' // `true` || `false`'}</Com>\n    </Line>\n  </CodeDisplay>\n)\n\nexport default ApiLogsFocus\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Func, Line, Str, Var } from '../../components/code-display'\n\nconst ApiSetLanguage = () => {\n  return (\n    <CodeDisplay title={localize('HOW_TO_USE_API', ['setLanguage()'])}>\n      <Line>\n        <Var>langutil</Var>.<Func>setLanguage</Func>(<Str>'{localize('DOC_EXAMPLE_PRIMARY_LANG')}'</Str>)\n        {/* <Def>let</Def> <Var>c1</Var> = <Func>localize</Func>(<Str>'HELLO_NAME'</Str>, [<Str>'{name1}'</Str>], <Str>'upperCase'</Str>) */}\n      </Line>\n    </CodeDisplay>\n  )\n}\n\nexport default ApiSetLanguage\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Func, Key, Line, Str, Var } from '../../components/code-display'\n\nconst ApiSetLanguage = () => {\n  return (\n    <CodeDisplay title={localize('HOW_TO_USE_API', ['setDictionary()'])}>\n      <Line>\n        <Key>import</Key> <Var>dictionary</Var> <Key>from</Key> <Str>'./localizations'</Str>\n      </Line>\n      <Line>\n        <Var>langutil</Var>.<Func>setDictionary</Func>(<Var>dictionary</Var>)\n      </Line>\n    </CodeDisplay>\n  )\n}\n\nexport default ApiSetLanguage\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Key, Var, Str, Func, Com } from '../../components/code-display'\nimport { withProps } from '../../modules'\n\nconst ApiAutoDetect = () => (\n  <CodeDisplay title={localize('HOW_TO_USE_API', ['AUTO_DETECT'])}>\n    <Line>\n      <Com>{`// ${localize('WEB')}`}</Com>\n    </Line>\n    <Line>\n      <Key>import</Key> {'{ '}<Var>init</Var>, <Var>setLanguage</Var>, <Var>AUTO_DETECT</Var>{' }'} <Key>from</Key> <Str>'langutil'</Str>\n    </Line>\n    <Line />\n    <Line>\n      <Com>{'// '}{localize({\n        keyword: 'YOU_NEED_IMPORT_AD_IF_USING_RN',\n        transform: withProps({ dect: 'AUTO_DETECT', add: '\\'native-additions\\'', rn: 'React Native' })\n      })}</Com>\n    </Line>\n    <Line>\n      <Key>import</Key> {'{ '}<Var>AUTO_DETECT</Var>{' }'} <Key>from</Key> <Str>'langutil/native-additions'</Str>\n    </Line>\n    <Line />\n    <Line>\n      <Com>{`// ${localize('USAGE_OF_OTHER_API_UNCHANGED')}`}</Com>\n    </Line>\n    <Line>\n      <Func>init</Func>(<Var>dictionary</Var>, <Str>'{localize('DOC_EXAMPLE_PRIMARY_LANG')}'</Str>, <Var>AUTO_DETECT</Var>)\n    </Line>\n    <Line>\n      <Func>setLanguage</Func>(<Str>'{localize('DOC_EXAMPLE_PRIMARY_LANG')}'</Str>, <Var>AUTO_DETECT</Var>)\n    </Line>\n  </CodeDisplay>\n)\n\nexport default ApiAutoDetect\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Com, Def, Func, Key, Line, Mark, Var } from '../../components/code-display'\n\nconst ApiWithLang = () => {\n  return (\n    <CodeDisplay title={localize('HOW_TO_USE_API', ['withLang()'])}>\n      <Line>\n        <Def>const</Def> <Func>MyComponent</Func> = () <Def>=></Def> {'{ '}<Com><Mark>{'/* ... */'}</Mark></Com>{' }'}\n      </Line>\n      <Line>\n        <Key>export default</Key> <Func>withLang</Func>(<Var>MyComponent</Var>)\n      </Line>\n    </CodeDisplay>\n  )\n}\n\nexport default ApiWithLang\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Com, Var, Def, Str, Func, Type } from '../../components/code-display'\n\nconst Casings = () => {\n  let name1 = localize('DOC_EXAMPLE_NAME_1')\n  return (\n    <CodeDisplay title={localize('APPLYING_CASINGS_TO_YOUR_LOC_STR')}>\n      <Line>\n        <Def>let</Def> <Var>c1</Var> = <Func>localize</Func>(<Str>'HELLO_NAME'</Str>, [<Str>'{name1}'</Str>], <Str>'upperCase'</Str>)\n      </Line>\n      <Line>\n        <Type>console</Type>.<Func>log</Func> = (<Var>c1</Var>)\n        <Com>{` // ${localize('DOC_EXAMPLE_PARAM_ARR_HELLO_NAME_ACTUAL', [name1], 'upperCase')}`}</Com>\n      </Line>\n      <Line />\n      <Line>\n        <Com>{`// If there are no parameters to be passed in,`}</Com>\n      </Line>\n      <Line>\n        <Com>{`// you can use an alternative syntax like this:`}</Com>\n      </Line>\n      <Line>\n        <Def>let</Def> <Var>c2</Var> = <Func>localize</Func>({'{ '}<Var>keyword</Var>: <Str>'HELLO_WORLD'</Str>, <Var>casing</Var>: <Str>'titleCase'</Str>{' }'})\n      </Line>\n      <Line>\n        <Type>console</Type>.<Func>log</Func> = (<Var>c2</Var>)\n        <Com>{` // ${localize({ keyword: 'HELLO_WORLD', casing: 'titleCase' })}`}</Com>\n      </Line>\n    </CodeDisplay>\n  )\n}\n\nexport default Casings\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Str, Type } from '../../components/code-display'\n\nconst DictionaryPrimaryExample = () => (\n  <CodeDisplay title={`src/localizations/${localize('DOC_EXAMPLE_PRIMARY_LANG')}.js`}>\n    <Line><Type>module</Type>.<Type>exports</Type> = {'{'}</Line>\n    <Line indent={1}>\n      <Str>'HELLO_WORLD'</Str>: <Str>'{localize('HELLO_WORLD')}'</Str>\n    </Line>\n    <Line>{'}'}</Line>\n  </CodeDisplay>\n)\n\nexport default DictionaryPrimaryExample\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Str, Type } from '../../components/code-display'\n\nconst DictionarySecondaryExample = () => (\n  <CodeDisplay title={`src/localizations/${localize('DOC_EXAMPLE_SECONDARY_LANG')}.js`}>\n    <Line><Type>module</Type>.<Type>exports</Type> = {'{'}</Line>\n    <Line indent={1}>\n      <Str>'HELLO_WORLD'</Str>: <Str>'{localize('HELLO_WORLD_SECONDARY')}'</Str>\n    </Line>\n    <Line>{'}'}</Line>\n  </CodeDisplay>\n)\n\nexport default DictionarySecondaryExample\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Func, Line, Str, Type } from '../../components/code-display'\n\nconst DictionaryIndexExample = () => {\n  const primaryLang = localize('DOC_EXAMPLE_PRIMARY_LANG')\n  const secondaryLang = localize('DOC_EXAMPLE_SECONDARY_LANG')\n  return (\n    <CodeDisplay title='src/localizations/index.js'>\n      <Line><Type>module</Type>.<Type>exports</Type> = {'{'}</Line>\n      <Line indent={1}>\n        <Str>'{primaryLang}'</Str>: <Func>require</Func>(<Str>'./{primaryLang}'</Str>),\n      </Line>\n      <Line indent={1}>\n        <Str>'{secondaryLang}'</Str>: <Func>require</Func>(<Str>'./{secondaryLang}'</Str>)\n      </Line>\n      <Line>{'}'}</Line>\n    </CodeDisplay>\n  )\n}\n\nexport default DictionaryIndexExample\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Com } from '../../components/code-display'\n\nconst FolderStructure = () => (\n  <CodeDisplay title={localize('FOLDER_STRUCTURE')} mode='none'>\n    <Line>└─┬ src</Line>\n    <Line>  └─┬ localizations</Line>\n    <Line indent={1}>├── index.js</Line>\n    <Line indent={1}>├── {localize('DOC_EXAMPLE_PRIMARY_LANG')}.js</Line>\n    <Line indent={1}>├── {localize('DOC_EXAMPLE_SECONDARY_LANG')}.js</Line>\n    <Line indent={1}>└── ... <Com># {localize('DOC_BODY_YOU_MAY_ADD_MORE_FILES')}</Com></Line>\n  </CodeDisplay>\n)\n\nexport default FolderStructure\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Key, Com, Var, Def, Str, Func, Type } from '../../components/code-display'\n\nconst HomeDemo = () => (\n  <CodeDisplay>\n    <Line>\n      <Key>import</Key> {'{'} <Var>localize</Var> {'}'} <Key>from</Key> <Str>'langutil'</Str>\n    </Line>\n    <Line>\n      <Def>let</Def> <Var>greet</Var> = <Func>localize</Func>(<Str>'HELLO_WORLD'</Str>)\n    </Line>\n    <Line>\n      <Type>console</Type>.<Func>log</Func>(<Var>greet</Var>)\n      <Com>{` // ${localize('OUTPUT_HELLO_WORLD')}`}</Com>\n    </Line>\n    <Line>\n      <Com>{`// ${localize('ITS_THAT_SIMPLE')}`}</Com>\n    </Line>\n  </CodeDisplay>\n)\n\nexport default HomeDemo\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line } from '../../components/code-display'\n\nconst InstallUsingNpm = () => (\n  <CodeDisplay title={localize('USING_NPM')} mode='none'>\n    <Line>npm install langutil</Line>\n  </CodeDisplay>\n)\n\nexport default InstallUsingNpm","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line } from '../../components/code-display'\n\nconst InstallUsingYarn = () => (\n  <CodeDisplay title={localize('USING_YARN')} mode='none'>\n    <Line>yarn add langutil</Line>\n  </CodeDisplay>\n)\n\nexport default InstallUsingYarn","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Com, Var, Str, Func, Type, Def } from '../../components/code-display'\n\nconst ParamArray = () => {\n  const name1 = localize('DOC_EXAMPLE_NAME_1')\n  const name2 = localize('DOC_EXAMPLE_NAME_2')\n  return (\n    <CodeDisplay title={`${localize('IN_YOUR_OWN_FILE_COLON')}`}>\n      <Line>\n        <Def>let</Def> <Var>a</Var> = <Func>localize</Func>(<Str>'HELLO_NAME'</Str>, [<Str>'{name1}'</Str>])\n      </Line>\n      <Line>\n        <Type>console</Type>.<Func>log</Func>(<Var>a</Var>)\n        <Com>\n          {` // ${localize('DOC_EXAMPLE_PARAM_ARR_HELLO_NAME_ACTUAL', [name1])}`}\n        </Com>\n      </Line>\n      <Line>\n        <Def>let</Def> <Var>b</Var> = <Func>localize</Func>(<Str>'HELLO_NAME_2'</Str>, [<Str>'{name1}'</Str>, <Str>'{name2}'</Str>])\n      </Line>\n      <Line>\n        <Type>console</Type>.<Func>log</Func>(<Var>b</Var>)\n        <Com>\n          {` // ${localize('DOC_EXAMPLE_PARAM_ARR_HELLO_NAME_2_ACTUAL', [name1, name2])}`}\n        </Com>\n      </Line>\n    </CodeDisplay>\n  )\n}\n\nexport default ParamArray\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Str, Type } from '../../components/code-display'\n\nconst ParamArrayDictionary = () => (\n  <CodeDisplay title={`localizations/${localize('DOC_EXAMPLE_PRIMARY_LANG')}.js`}>\n    <Line>\n      <Type>module</Type>.<Type>exports</Type> = {'{'}\n    </Line>\n    <Line indent={1}>\n      <Str>'HELLO_NAME'</Str>: <Str>'{localize('DOC_EXAMPLE_PARAM_ARR_HELLO_NAME')}'</Str>,\n    </Line>\n    <Line indent={1}>\n      <Str>\n        'HELLO_NAME_2'</Str>: <Str>'{localize('DOC_EXAMPLE_PARAM_ARR_HELLO_NAME_2')}'\n      </Str>\n    </Line>\n    <Line>{'}'}</Line>\n  </CodeDisplay>\n)\n\nexport default ParamArrayDictionary\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Com, Var, Str, Func, Type, Def } from '../../components/code-display'\n\nconst ParamObject = () => {\n  const name1 = localize('DOC_EXAMPLE_NAME_1')\n  const name2 = localize('DOC_EXAMPLE_NAME_2')\n  return (\n    <CodeDisplay title={`${localize('IN_YOUR_OWN_FILE_COLON')}`}>\n      <Line>\n        <Def>let</Def> <Var>a</Var> = <Func>localize</Func>(<Str>'HELLO_NAME'</Str>, {'{ '}<Var>name1</Var>: <Str>'{name1}'</Str>{' }'})\n      </Line>\n      <Line>\n        <Type>console</Type>.<Func>log</Func>(<Var>a</Var>)\n        <Com>\n          {` // ${localize('DOC_EXAMPLE_PARAM_OBJ_HELLO_NAME_ACTUAL', { name1 })}`}\n        </Com>\n      </Line>\n      <Line>\n        <Def>let</Def> <Var>b</Var> = <Func>localize</Func>(<Str>'HELLO_NAME_2'</Str>, {'{ '}<Var>name1</Var>: <Str>'{name1}'</Str>, <Var>name2</Var>: <Str>'{name2}'</Str>{' }'})\n      </Line>\n      <Line>\n        <Type>console</Type>.<Func>log</Func>(<Var>b</Var>)\n        <Com>\n          {` // ${localize('DOC_EXAMPLE_PARAM_OBJ_HELLO_NAME_2_ACTUAL', { name1, name2 })}`}\n        </Com>\n      </Line>\n    </CodeDisplay>\n  )\n}\n\nexport default ParamObject\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Str, Type } from '../../components/code-display'\n\nconst ParamObjectDictionary = () => (\n  <CodeDisplay title={`localizations/${localize('DOC_EXAMPLE_PRIMARY_LANG')}.js`}>\n    <Line>\n      <Type>module</Type>.<Type>exports</Type> = {'{'}\n    </Line>\n    <Line indent={1}>\n      <Str>'HELLO_NAME'</Str>: <Str>'{localize('DOC_EXAMPLE_PARAM_OBJ_HELLO_NAME')}'</Str>,\n    </Line>\n    <Line indent={1}>\n      <Str>\n        'HELLO_NAME_2'</Str>: <Str>'{localize('DOC_EXAMPLE_PARAM_OBJ_HELLO_NAME_2')}'\n      </Str>\n    </Line>\n    <Line>{'}'}</Line>\n  </CodeDisplay>\n)\n\nexport default ParamObjectDictionary\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Com, Key, Var, Str, Func, Type } from '../../components/code-display'\n\nconst SwitchingLanguages = () => (\n  <CodeDisplay title={localize('SWITCHING_BETWEEN_LANGUAGES')}>\n    <Line>\n      <Key>import</Key> {'{'} <Var>setLanguage</Var> {'}'} <Key>from</Key> <Str>'langutil'</Str>\n    </Line>\n    <Line />\n    <Line>\n      <Type>console</Type>.<Func>log</Func>(<Func>localize</Func>(<Str>'HELLO_WORLD'</Str>))\n      <Com>{` // ${localize('HELLO_WORLD')}`}</Com>\n    </Line>\n    <Line>\n      <Func>setLanguage</Func>(<Str>'{localize('DOC_EXAMPLE_SECONDARY_LANG')}'</Str>)\n    </Line>\n    <Line>\n      <Type>console</Type>.<Func>log</Func>(<Func>localize</Func>(<Str>'HELLO_WORLD'</Str>))\n      <Com>{` // ${localize('HELLO_WORLD_SECONDARY')}`}</Com>\n    </Line>\n  </CodeDisplay>\n)\n\nexport default SwitchingLanguages\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Key, Com, Var, Str, Func, Type, Def, Rgx, Rgxe } from '../../components/code-display'\n\nconst Transformations = () => {\n  return (\n    <CodeDisplay title={localize('APPLYING_TRANSFORMATION_TO_YOUR_LOC_STR')}>\n      <Line>\n        <Def>let</Def> <Var>transformed</Var> = <Func>localize</Func>({'{'}\n      </Line>\n      <Line indent={1}>\n        <Var>keyword</Var>: <Str>'HELLO_WORLD'</Str>,\n      </Line>\n      <Line indent={1}>\n        <Var>transform</Var>: (<Var>value</Var>) <Def>=></Def> {'{'}\n      </Line>\n      <Line indent={2}>\n        <Key>return</Key> <Var>value</Var>.<Func>replace</Func>(<Rgx>/<Rgxe>[</Rgxe>aeiou<Rgxe>]</Rgxe>/</Rgx><Def>gi</Def>, <Str>'*'</Str>)\n      </Line>\n      <Line indent={1}>\n        {'}'}\n      </Line>\n      <Line>\n        {'}'})\n      </Line>\n      <Line />\n      <Line>\n        <Type>console</Type>.<Func>log</Func>(<Var>transformed</Var>)\n        <Com>{` // ${localize({ keyword: 'HELLO_WORLD', transform: val => val.replace(/[aeiou]/gi, '*') })}`}</Com>\n      </Line>\n    </CodeDisplay>\n  )\n}\n\nexport default Transformations\n","import React from 'react'\nimport { localize } from 'langutil'\nimport CodeDisplay, { Line, Com, Var, Str, Func, Type, Def } from '../../components/code-display'\n\nconst Usage = () => (\n  <CodeDisplay title={localize('BASIC_USAGE')}>\n    <Line>\n      <Def>let</Def> <Var>greet</Var> = <Func>localize</Func>(<Str>'HELLO_WORLD'</Str>)\n    </Line>\n    <Line>\n      <Type>console</Type>.<Func>log</Func>(<Var>greet</Var>)\n      <Com>{` // ${localize('OUTPUT_HELLO_WORLD')}`}</Com>\n    </Line>\n  </CodeDisplay>\n)\n\nexport default Usage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { localize } from 'langutil'\n\n// TODO: If isMobile: Use styles below for the button\n// height: 32pt;\n// padding-left: 1em;\n// padding-right: 1em;\n\nfunction CopyButton({ onClick, copied }) {\n  return (\n    <button\n    className='code-disp-toolbar-button'\n    onClick={onClick}\n    style={{\n      backgroundColor: copied ? 'transparent' : '',\n      border: copied ? 'solid 1px #00AA00' : '',\n    }}\n    >\n      <div\n        className='code-disp-toolbar-button-div'\n        style={{\n          color: copied ? '#00CC00' : '',\n        }}\n      >\n        <i\n          className='material-icons code-disp-toolbar-button-icon'\n          children={copied ? 'done' : 'file_copy'}\n        />\n        {localize({ keyword: copied ? 'COPIED' : 'COPY', casing: 'upperCase' })}\n      </div>\n    </button>\n  )\n}\n\nCopyButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  copied: PropTypes.bool,\n}\n\nexport default CopyButton\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { localize } from 'langutil'\nimport CopyButton from './copy-button'\nimport copy from 'copy-to-clipboard'\nimport { HashFactory } from '../../classes'\n\nlet idTracker = new HashFactory()\n\n/**\n * @augments{React.Component<{}>}\n */\nclass CodeDisplay extends React.Component {\n\n  static propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n    startLineFrom: PropTypes.number,\n    mode: PropTypes.oneOf(['none', 'line', 'all'])\n  }\n\n  constructor() {\n    super()\n    this.componentId = idTracker.createHash(6)\n    this.state = {\n      copied: false\n    }\n  }\n\n  modStyles = {\n    '+': { backgroundColor: '#44553366', color: '#AAFFAA' },\n    '-': { backgroundColor: '#44000066', color: '#FFAAAA' },\n    '*': { backgroundColor: '#FFFFFF0F', color: '#00000000' },\n  }\n\n  componentWillUnmount() {\n    idTracker.unregisterHash(this.componentId)\n    clearTimeout(this.timeoutRef)\n  }\n\n  extractCode = () => {\n    try {\n      const { children } = this.props\n      let childrenToUse = Array.isArray(children) ? children : [children]\n      let output = ''\n      for (let i = 0; i < childrenToUse.length; i++) {\n        const id = `code-content-${this.componentId}-${i}`\n        const extracted = document.getElementById(id).innerText\n        output += extracted === ' ' ? '' : extracted\n        if (extracted !== '\\n') { output += '\\n' }\n      }\n      return output\n    } catch (e) {\n      console.error(e)\n      return ''\n    }\n  }\n\n  handleCopy = () => {\n    const codeToCopy = this.extractCode()\n    // console.log('codeToCopy:'); console.log(codeToCopy)\n    try {\n      copy(codeToCopy)\n      this.showCopied()\n    } catch (e) {\n      window.alert(localize('FAIL_COPY_DESC'))\n    }\n  }\n\n  showCopied = () => {\n    this.setState({ copied: true })\n    this.timeoutRef = setTimeout(() => {\n      this.setState({ copied: false })\n    }, 1500)\n  }\n\n  render() {\n    const { title, children = [], startLineFrom = 1, mode = 'all' } = this.props\n    let modArray = [], lineArray = [], codeArray = [], padArray = []\n\n    // Ensure children is always array\n    const _children = Array.isArray(children) ? children : [children]\n\n    for (let i = 0; i < _children.length; i++) {\n\n      // conditional checking for line skipping\n      const modType = _children[i].type.mod\n      const { backgroundColor, color } = this.modStyles[modType] || {}\n\n      if (mode === 'all') {\n        modArray.push(\n          <div key={`mod${i}`}\n            className='code-disp-content-each-line'\n            style={{\n              color: ['+', '-'].includes(modType) ? color : 'transparent',\n              backgroundColor,\n              paddingInlineStart: 20,\n            }}\n            children={modType || '•'}\n          />\n        )\n      }\n\n      if (['all', 'line'].includes(mode)) {\n        lineArray.push(\n          <div\n            key={`line${i}`}\n            className='code-disp-content-each-line'\n            style={{\n              backgroundColor,\n              paddingInlineStart: 20,\n              paddingInlineEnd: 20,\n            }}\n          >\n            {i + startLineFrom}\n          </div>\n        )\n      }\n\n      codeArray.push(\n        <div\n          key={`code${i}`}\n          id={`code-content-${this.componentId}-${i}`}\n          className='code-disp-content-each-line code-disp-content-code-actual'\n          style={{ backgroundColor }}\n        >\n          {_children[i]}\n        </div>\n      )\n\n      padArray.push(\n        <div\n          key={`pad${i}`}\n          style={{ color: 'transparent', backgroundColor }}\n          className='code-disp-content-each-line'\n          children={' '}\n        />\n      )\n\n    }\n\n    const { copied } = this.state\n\n    return (\n      <div className='code-disp-container'>\n        <div className='code-disp-toolbar-container'>\n          <p className='code-disp-title' children={title} />\n          <CopyButton onClick={this.handleCopy} copied={copied} />\n        </div>\n        <div className='code-disp-content-container'>\n\n          {/* Modified indicator */}\n          <div className='code-disp-content-mod-container'>\n            <pre className='code-disp-pre' children={modArray} />\n          </div>\n\n          {/* Line number */}\n          <div className='code-disp-content-line-container'>\n            <pre className='code-disp-pre' children={lineArray} />\n          </div>\n\n          {/* Actual code */}\n          <div className='code-disp-content-code-container'>\n            <pre className='code-disp-pre code'>\n              {codeArray}\n            </pre>\n          </div>\n\n          {/* Ending padding */}\n          <div>\n            <pre className='code-disp-pre' children={padArray} />\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default CodeDisplay\n","import { getRandomString } from '../modules'\nimport { STRINGS } from '../constants'\n\nclass HashMaker {\n\n  constructor(blacklist = []) {\n    this.used = blacklist\n    this.charset = STRINGS.defaultHashCharset\n  }\n\n  createHash(length, charset) {\n    const charsetToUse = typeof charset === 'string' ? getSanitizedCharset(charset) : this.charset\n    const LOOP_LIMIT = 10 // Temporary, need to find out maximum combination count\n    let newHash, count = 0\n    do {\n      newHash = getRandomString(length, charsetToUse)\n    } while (this.used.includes(newHash) && count++ < LOOP_LIMIT)\n    if (this.used.includes(newHash)) {\n      throw Error('Too many ID clashes while attempting to create a unique hash')\n      // throw Error(`All possible hashes of length ${length} has been used up!`)\n    }\n    this.used.push(newHash)\n    return newHash\n  }\n\n  unregisterHash(hash) {\n    const indexOfHashInUsed = this.used.indexOf(hash)\n    if (indexOfHashInUsed > -1) {\n      this.used.splice(indexOfHashInUsed, 1)\n    }\n  }\n\n}\n\nexport default HashMaker\n\nfunction getSanitizedCharset(charset) {\n  return [...new Set(charset.split(''))].join('')\n}\n","import React from 'react'\nimport CodeDisplay from './code-display'\nimport './index.css'\n\nconst INDENT_WIDTH = 4\nconst DEF_BASE = '#79b6f2'\nconst COLORS = {\n  keyword: '#c5a5c5', // Eg: import, switch, if, for\n  variable: '#a5dfff',\n  definition: DEF_BASE, // Eg: const, let, var\n  html: DEF_BASE, // <div>\n  propPass: DEF_BASE, // {} brackets for passing props\n  comment: '#6c9985',\n  string: '#ffa899',\n  number: '#B5CEA8',\n  regex: '#CC6688',\n  regexEsc: '#CC9988',\n  boolean: DEF_BASE,\n  type: '#64c9b5', // Eg: <Component/>\n  function: '#efefb1',\n  angular: '#767676' // Angular brackets such as <></>\n}\n\nexport const Com = ({ children }) => <span children={children} style={{ color: COLORS.comment }} />\nexport const Key = ({ children }) => <span children={children} style={{ color: COLORS.keyword }} />\nexport const Var = ({ children }) => <span children={children} style={{ color: COLORS.variable }} />\nexport const Def = ({ children }) => <span children={children} style={{ color: COLORS.definition }} />\nexport const Html = ({ children }) => <span children={children} style={{ color: COLORS.html }} />\nexport const Prop = ({ children }) => <span children={children} style={{ color: COLORS.propPass }} />\nexport const Str = ({ children }) => <span children={children} style={{ color: COLORS.string }} />\nexport const Num = ({ children }) => <span children={children} style={{ color: COLORS.number }} />\nexport const Rgx = ({ children }) => <span children={children} style={{ color: COLORS.regex }} />\nexport const Rgxe = ({ children }) => <span children={children} style={{ color: COLORS.regexEsc }} />\nexport const Bool = ({ children }) => <span children={children} style={{ color: COLORS.boolean }} />\nexport const Type = ({ children }) => <span children={children} style={{ color: COLORS.type }} />\nexport const Func = ({ children }) => <span children={children} style={{ color: COLORS.function }} />\nexport const Ang = ({ children }) => <span children={children} style={{ color: COLORS.angular }} />\nexport const Mark = ({ children }) => <span children={children} style={{ backgroundColor: '#000000', borderRadius: '0.35em', paddingInlineStart: '0.5em', paddingInlineEnd: '0.5em', paddingBlockStart: '0.15em', paddingBlockEnd: '0.15em' }} />\nexport const Line = ({ children = <br />, indent = 0 }) => (\n  <>{' '.repeat(4 * indent)}{children ? children : ' '}</>\n)\nexport const LineEmp = ({ children, indent = 0 }) => (\n  <>{' '.repeat(INDENT_WIDTH * indent)}{children ? children : ' '}</>\n)\nLineEmp.mod = '*'\nexport const LineAdd = ({ children, indent = 0 }) => (\n  <>{' '.repeat(INDENT_WIDTH * indent)}{children ? children : ' '}</>\n)\nLineAdd.mod = '+'\nexport const LineRem = ({ children, indent = 0 }) => (\n  <>{' '.repeat(INDENT_WIDTH * indent)}{children ? children : ' '}</>\n)\nLineRem.mod = '-'\nexport const Err = ({ children }) => (\n  <span children={children} style={{\n    textDecorationColor: '#F48771',\n    textDecorationLine: 'underline',\n    textDecorationStyle: 'dashed'\n  }} />\n)\n\nexport default CodeDisplay\n","let defaultExtracted = false\nlet CodeSamples = {\n  // Demo: require('./demo'),\n  ApiInit: require('./api-init'),\n  ApiInitReact: require('./api-init-react'),\n  ApiLocalize: require('./api-localize'),\n  ApiLogsFocus: require('./api-logs-focus'),\n  ApiSetLanguage: require('./api-set-language'),\n  ApiSetDictionary: require('./api-set-dictionary'),\n  ApiAutoDetect: require('./api-auto-detect'),\n  ApiWithLang: require('./api-with-lang'),\n  Casings: require('./casings'),\n  DictionaryPrimaryExample: require('./dictionary-primary-example'),\n  DictionarySecondaryExample: require('./dictionary-secondary-example'),\n  DictionaryIndexExample: require('./dictionary-index-example'),\n  FolderStructure: require('./folder-structure'),\n  HomeDemo: require('./home-demo'),\n  InstallUsingNpm: require('./install-using-npm'),\n  InstallUsingYarn: require('./install-using-yarn'),\n  ParamArray: require('./paramarray'),\n  ParamArrayDictionary: require('./paramarray-dictionary'),\n  ParamObject: require('./paramobject'),\n  ParamObjectDictionary: require('./paramobject-dictionary'),\n  SwitchingLanguages: require('./switching-languages'),\n  Transformations: require('./transformations'),\n  Usage: require('./usage'),\n}\n\nif (!defaultExtracted) {\n  const index = Object.keys(CodeSamples)\n  for (let i = 0; i < index.length; i++) {\n    CodeSamples[index[i]] = CodeSamples[index[i]].default\n  }\n}\n\nmodule.exports = CodeSamples\n"],"sourceRoot":""}